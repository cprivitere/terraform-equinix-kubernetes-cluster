## template: jinja
#cloud-config

write_files:
- content: |
    overlay
    br_netfilter
  path: /etc/modules-load.d/k8s.conf
- content: |
    net.bridge.bridge-nf-call-iptables  = 1
    net.ipv4.ip_forward                 = 1
    net.bridge.bridge-nf-call-ip6tables = 1
  path: /etc/sysctl.d/99-kubernetes-cri.conf
- content: |
    KUBELET_EXTRA_ARGS=--node-ip={{ ds.meta_data.local_ipv4 }} %{ if CLOUD_PROVIDER_EXTERNAL == true } --cloud-provider=external %{ endif }
  path: /etc/default/kubelet
- content: |
    apiVersion: kubeadm.k8s.io/v1beta3
    kind: JoinConfiguration
    nodeRegistration:
    %{ if CLOUD_PROVIDER_EXTERNAL == true }
      kubeletExtraArgs:
        cloud-provider: "external"
    %{ endif }
      taints: null
    discovery:
      bootstrapToken:
        token: "8in490.ru91gdlo4hy0xhfz"
        apiServerEndpoint: ${VIP}:6443
        unsafeSkipCAVerification: true
  path: /root/kubeadm.join.yaml

runcmd:
- |
  sleep 10
  sed -ri '/\sswap\s/s/^#?/#/' /etc/fstab
  swapoff -a
  mount -a
  modprobe overlay
  modprobe br_netfilter
  sysctl --system
  export DEBIAN_FRONTEND=noninteractive
  apt-get update
  apt-get remove docker docker-engine containerd runc -y
  apt-get install apt-transport-https ca-certificates curl gnupg lsb-release jq kubetail -y
  MAJOR_MINOR=$(echo ${KUBERNETES_VERSION} | sed -E 's/v([0-9]+\.[0-9]+).*/\1/')
  mkdir -m 0755 -p /etc/apt/keyrings
  curl -fsSL https://pkgs.k8s.io/core:/stable:/v$MAJOR_MINOR/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v$MAJOR_MINOR/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  apt-get update
  TRIMMED_KUBERNETES_VERSION=$(echo ${KUBERNETES_VERSION} | sed 's/\./\\\\./g' | sed 's/^v//')
  RESOLVED_KUBERNETES_VERSION=$(apt-cache madison kubelet | awk -v VERSION=$${TRIMMED_KUBERNETES_VERSION} '$3~ VERSION { print $3 }' | head -n1)
  apt-get install -y containerd.io kubelet=$${RESOLVED_KUBERNETES_VERSION} kubeadm=$${RESOLVED_KUBERNETES_VERSION} kubectl=$${RESOLVED_KUBERNETES_VERSION}
  apt-mark hold kubelet kubeadm kubectl
  containerd config default > /etc/containerd/config.toml
  sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml
  sed -i "s,sandbox_image.*$,sandbox_image = \"$(kubeadm config images list | grep pause | sort -r | head -n1)\"," /etc/containerd/config.toml
  systemctl restart containerd
  systemctl enable kubelet.service
  kubeadm join --config=/root/kubeadm.join.yaml

power_state:
  mode: false
